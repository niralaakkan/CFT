AWSTemplateFormatVersion: 2010-09-09
Description: >-
  
Parameters:
  NameServer:
    Description: Server name
    Type: String
  KeyName:
    Description: Keypair
    Type: 'AWS::EC2::KeyPair::KeyName'
  SecurityGroupServer:
    Description: Security group id
    Type: 'AWS::EC2::SecurityGroup::Id'
  mySubnet:
    Description: Subnet id
    Type: 'AWS::EC2::Subnet::Id'
  InstanceType:
    Description: Amazon EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: must be a valid EC2 instance type.
Mappings:
  AWSRegion2AMI:
    us-east-1:
      Windows2008r2: ami-0c6fb6b3b0bcd68f9
      Windows2012r2: ami-028be67c2aa2f1ce1
    us-west-2:
      Windows2008r2: ami-b5ca3dd5
      Windows2012r2: ami-87c037e7
    us-west-1:
      Windows2008r2: ami-ed2b548d
      Windows2012r2: ami-032f5063
    eu-west-1:
      Windows2008r2: ami-92bd3fe1
      Windows2012r2: ami-9ebb39ed
    eu-central-1:
      Windows2008r2: ami-5ecf2f31
      Windows2012r2: ami-3acf2f55
    ap-northeast-1:
      Windows2008r2: ami-5d425f33
      Windows2012r2: ami-ff435e91
    ap-northeast-2:
      Windows2008r2: ami-ebdf1785
      Windows2012r2: ami-c6de16a8
    ap-southeast-1:
      Windows2008r2: ami-af4e9bcc
      Windows2012r2: ami-63489d00
    ap-southeast-2:
      Windows2008r2: ami-08f1d36b
      Windows2012r2: ami-a1f7d5c2
    sa-east-1:
      Windows2008r2: ami-89fc72e5
      Windows2012r2: ami-6efd7302
    cn-north-1:
      Windows2008r2: ami-ac62a9c1
      Windows2012r2: ami-7779b21a
Resources:
  WindowsServer:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          files:
            'c:\cfn\cfn-hup.conf':
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

            'c:\cfn\hooks.d\cfn-auto-reloader.conf':
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WindowsServer.Metadata.AWS::CloudFormation::Init
                  - 'action=cfn-init.exe -v -s '
                  - !Ref 'AWS::StackId'
                  - ' -r WindowsServer'
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - |+

          commands:
            1-install-roles:
              command: >-
                powershell.exe -ExecutionPolicy Unrestricted
                Install-WindowsFeature -Name Web-Server -IncludeAllSubFeature -IncludeManagementTool
            2-import-module:
              command: >-
                powershell.exe -ExecutionPolicy Unrestricted
                Get-Module -ListAvailable AWSPowershell, WebAdministration | import-module 
            3-create-directory:
              command: >-
                powershell.exe -ExecutionPolicy Unrestricted
                New-Item -Path "c:\inetpub_1\wwwroot" -ItemType "directory" -force
                $error | ConvertTo-Html -Head TestSite | Out-File C:\inetpub_1\wwwroot\testsite.html
            4-Remove-defaults:
              command: >-
                powershell.exe -ExecutionPolicy Unrestricted
                Get-Website -Name "Default Web Site" | Remove-Website -Confirm:$false -Verbose
                Remove-webapppool -Name "DefaultAppPool" -confirm:$false -verbose
            5-Configure-site:
              command: >-
                powershell.exe -ExecutionPolicy Unrestricted
                New-WebAppPool testsite -force
                new-website -Name testsite -Port 80 -IPAddress "*" -PhysicalPath "C:\inetpub_1\wwwroot" -ApplicationPool testsite -force
                Add-WebConfiguration //defaultDocument/files "IIS:\sites\testsite" -atIndex 0 -Value @{value="testsite.html"} 
                Start-Website -name testsite
            6-restart:
              command: powershell.exe Restart-Computer
              waitAfterCompletion: forever
            7-signal-success:
              command: !Join 
                - ''
                - - cfn-signal.exe -e %ERRORLEVEL% "
                  - !Base64 
                    Ref: WindowsServerWaitHandle
                  - '"'
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - 'c:\cfn\cfn-hup.conf'
                  - 'c:\cfn\hooks.d\cfn-auto-reloader.conf'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref NameServer
      ImageId: !FindInMap 
        - AWSRegion2AMI
        - !Ref 'AWS::Region'
        - Windows2012r2
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref mySubnet
          GroupSet:
            - !Ref SecurityGroupServer
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <script>
            - 'cfn-init.exe -v -s '
            - !Ref 'AWS::StackId'
            - ' -r WindowsServer'
            - ' --region '
            - !Ref 'AWS::Region'
            - |+
            - </script>
  WindowsServerWaitHandle:
    Type: 'AWS::CloudFormation::WaitConditionHandle'
    
  WindowsServerWaitCondition:
    Type: 'AWS::CloudFormation::WaitCondition'
    DependsOn: WindowsServer
    Properties:
      Handle: !Ref WindowsServerWaitHandle
      Timeout: '3600'
Outputs:
  InstanceID:
    Description: The Instance ID
    Value: !Ref WindowsServer
